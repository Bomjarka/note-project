name: Application CI

on:
  pull_request:
    branches: [ master, staging ]
  push:
    branches: [ master ]

jobs:
  build-app:
    runs-on: ubuntu-latest
    env:
      CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}
    steps:
      - uses: actions/checkout@v2
      - name: Copy .env.example to .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Set UID
        run: sed -i "s/DEV_LOCAL_UID=1/DEV_LOCAL_UID="$(id -u)"/" .env
      - name: Set GID
        run: sed -i "s/DEV_LOCAL_GID=1/DEV_LOCAL_GID="$(id -u)"/" .env
      - name: Set Database Provider
        run: sed -i "s/DB_HOST=127.0.0.1/DB_HOST=postgres/" .env
      - name: Up container
        run: docker-compose up -d
      - name: Install Composer
        run: docker-compose exec -T backend bash -lc 'composer install'
      - name: Generate key
        run: docker-compose exec -T backend bash -lc 'php artisan key:generate'
      - name: Database Migrations
        run: docker-compose exec -T backend bash -lc 'php artisan migrate:fresh'
      - name: Database Seeds
        run: docker-compose exec -T backend bash -lc 'php artisan db:seed'
      - name: Artisan Optimize
        run: docker-compose exec -T backend bash -lc 'php artisan optimize'
      - name: Code Climate setup
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter && chmod +x ./cc-test-reporter
                    ./cc-test-reporter before-build
      - name: Unit tests
        run: docker-compose exec -T backend bash -lc 'composer phpunit'
